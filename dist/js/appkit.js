var Appkit;!function(t){function e(){var t={promise:null,resolve:null,reject:null},e=new Promise(function(e,n){t.resolve=e,t.reject=n});return t.promise=e,t}function n(t,e){e.forEach(function(e){Object.getOwnPropertyNames(e.prototype).forEach(function(n){t.prototype[n]=e.prototype[n]})})}t.deferredPromise=e,t.applyMixins=n}(Appkit||(Appkit={}));var Appkit;!function(t){var e=function(){function t(){this._events={}}return t.prototype.registerEvent=function(t){this._events[t]=[]},t.prototype.on=function(t,e){if(!(t in this._events))throw new Error("Unknown event: "+t);this._events[name].push(e)},t.prototype.trigger=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(!(t in this._events))throw new Error("Unknown event: "+t);this._events[t].forEach(function(t){t.apply(void 0,e)})},t}();t.EventHandlerMixin=e}(Appkit||(Appkit={}));var Appkit;!function(t){var e=function(){function e(e){this._events={session_changed:[]},this._serializers={jsonapi:new t.JsonApiSerializer},this.initOptions(e),this.buildSession(),this.buildClient(),this._client.connect()}return e.prototype.initOptions=function(t){t=_.defaults(t||{},{apiHost:"localhost:8000",apiUseSsl:!1,apiPrefix:"/api"}),t.clients=_.defaultsDeep(t.clients||{},{rest:{enabled:!0,url:(t.apiUseSsl?"https://":"http://")+t.apiHost+t.apiPrefix},wamp:{enabled:!0,url:"ws://"+t.apiHost+t.apiPrefix+"/wamp"}}),this._options=t},e.prototype.buildSession=function(){this._session=new t.Session},e.prototype.buildClient=function(){var e=new t.FallbackClient(this._session),n=this._options.clients,o=n.wamp;if(o.enabled){var r=new t.AutobahnClient(o,this._session);e.addClient(r)}var i=n.rest;if(i.enabled){var s=new t.RestClient(i,this._session);e.addClient(s)}this._client=e},e.prototype.serializer=function(t){return t in this._serializers?this._serializers[t]:null},e.prototype.isAuthenticated=function(){return this._session.isAuthenticated()},e.prototype.user=function(){return this._session.userData},e.prototype.userId=function(){return this._session.userId},e.prototype.method=function(t,e){return this._client.method(t,e)},e.prototype.authenticate=function(t){var e=this;return this.method("users.authenticate",t).then(function(t){return e._session.updateWithResponse(e,t),e.trigger("session_changed",e._session),Promise.resolve(t)})},e.prototype.authenticateWithPassword=function(t,e){return this.authenticate({user:t,adaptor:"password",authData:{password:e}})},e.prototype.unauthenticate=function(){var t=this;if(!this.isAuthenticated())throw new Error("Can't unauthenticate when not authenticated.");return this.method("users.unauthenticate",{}).then(function(e){return t._session.clearUser(),t.trigger("session_changed",t._session),Promise.resolve(e)})},e.prototype.resumeSession=function(t){var e=this;return this.method("users.resume_session",{token:t}).then(function(t){return e._session.updateWithResponse(e,t),e.trigger("session_changed",e._session),Promise.resolve(t)})},e.prototype.query=function(t,e){return e=e||{},t&&(e.collection=t),this.method("query",{query:e})},e.prototype.create=function(t,e){return void 0===e&&(e={}),this.method("create",{data:t,meta:e})},e.prototype.update=function(t,e){return void 0===e&&(e={}),this.method("update",{data:t,meta:e})},e.prototype["delete"]=function(t,e){return void 0===e&&(e={}),this.method("delete",{data:t,meta:e})},e}();t.Appkit=e,t.applyMixins(e,[t.EventHandlerMixin])}(Appkit||(Appkit={}));var Appkit;!function(t){var e=function(){function t(){}return Object.defineProperty(t.prototype,"token",{get:function(){return this._token},set:function(t){this._token=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"userId",{get:function(){return this._userId},set:function(t){this._userId=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"userData",{get:function(){return this._userData},set:function(t){this._userData=t},enumerable:!0,configurable:!0}),t.prototype.isAuthenticated=function(){return""!==this._userId},t.prototype.clearUser=function(){this._userId="",this._userData=null},t.prototype.updateWithResponse=function(t,e){var n=e.meta&&e.meta.format?e.meta.format:null;if(!n)throw new Error("Unknown data format");var o=t.serializer(n);if(!o)throw new Error("No serializer for format: "+n);var r=o.UnserializeResponse(e),i=r.modelMap;if(!("sessions"in i&&i.sessions.length))throw new Error("No session in response");this._data=i.sessions[0],this._token=this._data.id,"users"in i&&i.users.length?(this._userData=i.users[0],this._userId=this._userData.id):this.clearUser()},t}();t.Session=e}(Appkit||(Appkit={}));var Appkit;!function(t){var e=function(){function e(t,e){if("object"!=typeof t)throw new Error("No options supplied to AutobahnClient");if(!t.url)throw new Error("Need to set 'url' option for AutobahnClient");this._url=t.url,this._debug=!!t.debug,this._session=e,this._realm=t.realm||"appkit",this._afterOpenCallbacks=[],this._afterCloseCallbacks=[]}return e.prototype.connect=function(){var t=this,e=new autobahn.Connection({url:this._url,realm:this._realm});return this._connection=e,e.onopen=function(e,n){console.log("APPKIT: Autobahn connection established"),t._autobahnSession=e,t._connected=!0,t._connecting=!1,t._afterOpenCallbacks.forEach(function(t){t.resolve(e,n)}),t._afterOpenCallbacks=[]},e.onclose=function(e,n){return console.log("APPKIT: Autobahn connection closed: ",e,n),t._autobahnSession=null,t._connected=!1,t._connecting=n.will_retry&&n.retry_count<2,t._afterOpenCallbacks.forEach(function(t){t.reject({reason:e,details:n})}),t._afterOpenCallbacks=[],t._afterCloseCallbacks.forEach(function(t){t.resolve(e,n)}),t._afterCloseCallbacks=[],!1},this._connected=!1,this._connecting=!0,e.open(),this.afterConnect()},e.prototype.isConnecting=function(){return this._connecting},e.prototype.isConnected=function(){return this._connected},e.prototype.afterConnect=function(){if(!this._connecting){if(this._connected)return Promise.resolve(this);throw new Error("Can't call .afterConnect() when the client is not connecting or connected.")}var e=t.deferredPromise();return this._afterOpenCallbacks.push(e),e.promise},e.prototype.afterDisconnect=function(){if(!this._connected)return Promise.resolve();var e=t.deferredPromise();return this._afterCloseCallbacks.push(e),e.promise},e.prototype.disconnect=function(){return this._connected?(this._connection.close("appkit.user_disconnect",""),this.afterDisconnect()):Promise.resolve()},e.prototype.method=function(t,e){return e=e||{},"data"in e||(e={data:e}),console.log("APPKIT: Calling autobahn method: ",t),Promise.resolve(this._autobahnSession.call(t,[],e)).get("kwargs")},e}();t.AutobahnClient=e}(Appkit||(Appkit={}));var Appkit;!function(t){var e=function(){function e(t){this._session=t,this._clients=[],this._afterConnectCallbacks=[]}return e.prototype.addClient=function(t){this._clients.push(t)},e.prototype.client=function(t){var e=this;void 0===t&&(t=0);var n=this._clients[t];return n?n.isConnected()?Promise.resolve(n):n.isConnecting()?n.afterConnect().then(function(){return n})["catch"](function(n){return e.client(t+1)}):void 0:Promise.reject("no_valid_client")},e.prototype.connect=function(t){var e=this;void 0===t&&(t=0);var n=this._clients[t];return n?n.connect().then(function(){for(var t=[],n=0;n<arguments.length;n++)t[n-0]=arguments[n];return e._afterConnectCallbacks.forEach(function(e){e.resolve.apply(e,t)}),e._afterConnectCallbacks=[],Promise.resolve(t)})["catch"](function(n){return e.connect(t+1)}):Promise.reject("no_valid_client")},e.prototype.isConnecting=function(){var t=!1;return this._clients.forEach(function(e){return e.isConnected()?!1:e.isConnecting()?(t=!0,!1):void 0}),t},e.prototype.isConnected=function(){var t=!1;return this._clients.forEach(function(e){return e.isConnected()?(t=!0,!1):void 0}),t},e.prototype.afterConnect=function(){if(!this.isConnecting()){if(this.isConnected())return Promise.resolve(this);throw new Error("Can't call .afterConnect() when the client is not connecting or connected.")}var e=t.deferredPromise();return this._afterConnectCallbacks.push(e),e.promise},e.prototype.afterDisconnect=function(){throw new Error(".afterDisconnect() is not supported by fallbackClient")},e.prototype.disconnect=function(){var t=[];return this._clients.forEach(function(e){e.isConnected()&&t.push(e.disconnect())}),Promise.all(t)},e.prototype.method=function(t,e){return this.client().call("method",t,e)},e}();t.FallbackClient=e}(Appkit||(Appkit={}));var Appkit;!function(t){var e=function(){function t(t,e){if("object"!=typeof t)throw new Error("No options supplied to RestClient");if(!t.url)throw new Error("Need to set 'url' option for RestClient");this._url=t.url,this._debug=!!t.debug,this._session=e}return t.prototype.connect=function(){return Promise.resolve()},t.prototype.isConnecting=function(){return!1},t.prototype.isConnected=function(){return!0},t.prototype.afterConnect=function(){return Promise.resolve(this)},t.prototype.disconnect=function(){return Promise.resolve()},t.prototype.afterDisconnect=function(){return Promise.resolve()},t.prototype._ajax=function(t){if(t=_.assign({method:"POST",contentType:"application/json",dataType:"json"},t||{}),!t.url)throw new Error("No url specified");"/"===t.url[0]&&(t.url=this._url+t.url),"GET"!==t.method&&t.data&&"string"!=typeof t.data&&(t.data=JSON.stringify(t.data));var e=this._session.token;return e&&(t.headers=t.headers||{},t.headers.Authentication=e),Promise.resolve($.ajax(t))},t.prototype.method=function(t,e){return e=e||{},"data"in e||(e={data:e}),this._ajax({url:"/method/"+t,data:e})},t}();t.RestClient=e}(Appkit||(Appkit={}));var Appkit;!function(t){function e(t){if(!t.type)throw console.log("JSONAPI unserialize error: model has no type",t),new Error("JSONAPI unserialize error");var e={type:t.type};if(t.id&&(e.id=t.id),t.attributes&&(e.attributes=t.attributes),t.relationships){var o={};_.forEach(t.relationships,function(t,e){o[e]=n(t.data)}),e.relationships=o}return e}function n(t){return Array.isArray(t)?_.map(t,function(t){return e(t)}):[e(t)]}var o=function(){function t(){}return t.prototype.UnserializeResponse=function(t){var e={models:[],extraModels:[],meta:{},errors:null,modelMap:{}};if(t.meta&&(e.meta=t.meta),t.data){var o=t.data;Array.isArray(o)&&o[0].type||"object"==typeof o&&o.type?e.models=n(o):e.data=o}t.included&&(e.extraModels=n(t.included)),t.errors&&(e.errors=t.errors);var r={};return _.forEach(e.models,function(t){t.type in r||(r[t.type]=[]),r[t.type].push(t)}),_.forEach(e.extraModels,function(t){t.type in r||(r[t.type]=[]),r[t.type].push(t)}),e.modelMap=r,e},t}();t.JsonApiSerializer=o}(Appkit||(Appkit={}));